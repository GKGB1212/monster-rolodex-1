{"version":3,"sources":["components/card/card.component.jsx","components/card-list/cart-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","item","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","bind","fetch","then","response","json","users","setState","e","this","target","value","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAK,SAAAC,GAAK,OACnB,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,2BAEP,+BAAKL,EAAMI,QAAQE,KAAMN,EAAMI,QAAQC,MACvC,4BAAIL,EAAMI,QAAQG,YCNbC,EAAU,SAACR,GACpB,OAAQ,qBAAKC,UAAU,YAAf,SACHD,EAAMS,SAASC,KAAI,SAAAC,GAAI,OACpB,cAAC,EAAD,CAAoBP,QAASO,GAAlBA,EAAKN,UCHfO,G,MAAU,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACnB,uBACIb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCgCHG,G,wDAnCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXT,SAAU,GACVU,YAAa,IAGf,EAAKL,aAAa,EAAKA,aAAaM,KAAlB,gBAPN,E,qDAUd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEjB,SAAUgB,S,0BAG7C,SAAaE,GACXC,KAAKF,SAAS,CAAEP,YAAaQ,EAAEE,OAAOC,U,oBAGxC,WACE,MAAkCF,KAAKV,MAA/BT,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZY,EAAmBtB,EAASuB,QAAO,SAAA5B,GAAO,OAC9CA,EAAQE,KAAK2B,cAAcC,SAASf,EAAYc,kBAClD,OACE,sBAAKhC,UAAU,MAAf,UACE,4DACA,cAAC,EAAD,CACEY,YAAY,SACZC,aAAcc,KAAKd,eACrB,cAAC,EAAD,CAAUL,SAAUsB,W,GA/BVI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.67a6707a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css'\r\n\r\nexport const Card=props=>(\r\n    <div className='card-container'>\r\n        <img \r\n            alt=\"monster\" \r\n            src={`https://robohash.org/${props.monster.id}set=set2&size=180x180`}\r\n        />\r\n        <h2>{props.monster.name}{props.monster.id}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport { Card } from '../card/card.component';\r\n\r\nexport const CardList =(props) =>{\r\n    return (<div className='card-list'>\r\n        {props.monsters.map(item=>(\r\n            <Card key={item.id} monster={item}/>\r\n        ))}\r\n    </div>);\r\n}","import React from 'react';\r\n\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox=({placeholder,handleChange})=>(\r\n    <input \r\n        className='search'\r\n        type='search'\r\n        placeholder={placeholder}\r\n        onChange={handleChange}/>\r\n)","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/cart-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n\n    this.handleChange=this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }));\n  }\n\n  handleChange(e){\n    this.setState({ searchField: e.target.value });\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;//làm vầy để biến mấy cái kia thành hằng k bị đổi\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex - Gia Binh</h1>\n        <SearchBox\n          placeholder='search'\n          handleChange={this.handleChange} />\n        <CardList monsters={filteredMonsters} />\n      </div>);\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}